=head1 url-hint

url-hint - Extension for URxvt which brings a hint mode to follow URLs

This B<URxvt> extension adds a hint mode to the terminal emulator, which
highlights URLs.
A pattern is presented for each URL, which can be used to open the URL using a
user defined application.
B<url-hint> is inspired by the hint mode of vimperator (or similar
browser extensions).

To enter the hint mode, create a B<URxvt> B<keysym> resource which invokes
the B<url-hint:hint> action.
Once the hint mode is activated (by pressing the B<keysym>), one can exit it
again by pressing either the key specified by the B<url-hint.exit-keysym>
resource, or the Escape key.
Use the B<xev> utility to find the name of the desired keysym.

B<NOTE>: For B<url-hint.exit-keysym>, the keysym description used by B<URxvt>
itself (using the 'M-' or 'C-' prefix) is not supported.
Please see the description of the B<XStringToKeysym> function for further
details.

The letters used to create the patterns can be defined by using the
B<url-hint.hint-chars> resource.
Each character of the given string will be used to create the patterns.
The length of each pattern depends on the number of visible URLs on the screen.
If the screen changes (because more output is generated by a program, or the
screen is scrolled-back), the generated patterns might change.

While the pattern is typed (and therefore not yet fully provided), the already
provided part is not presented on the screen directly.
But the pattern for each URL, which starts with the given input, changes its
font to indicate which part of the pattern has already been provided.
If the screen changes, the partially provided pattern might be reset.

The application which is used to open the URL is configured by the resource
B<url-hint.launcher>.

The B<url-hint:hint> action and B<url-hint.launcher> resource support a
C<.E<lt>numberE<gt>>> suffix.
The keysym defined for a B<url-hint:hint> with a specific suffix uses the launcher
with the same suffix.
This enables one to have multiple different keysyms for different applications.

=head2 INSTALLATION

B<URxvt> looks into multiple different directories when searching for extensions.
These can be configured using the B<URxvt> resource B<perl-lib>.
Please see L<urxvt(1)>.

If this extension should be installed into the users home directory, the
provided B<Makefile> can be used.
Simply run C<make install-home> as the desired user.
This installs the extension and the man page into the correct places in the users
home directory.
B<URxvt> should find the extension without the need to configure the B<perl-lib>
resource.

=head2 RESOURCES

=over 4

=item B<launcher>[I<.E<lt>numberE<gt>>]

Application which should be used to open URLs. The URL is always appended as an
addition argument to the given launcher.
If the arguments need be rearrange, wrap the application into a call to C</bin/sh>.
See the examples.

=item B<hint-chars>

Valid characters for the generated patterns.

=item B<exit-keysym>

Key to exit the hint mode.

=back

=head2 ACTIONS

=over 4

=item B<hint>[I<.E<lt>numberE<gt>>]

Starts the hint mode and uses the B<url-hint.launcher> resource with the same
I<.E<lt>numberE<gt>> suffix to launch the chosen URL.

=back

=head2 EXAMPLE RESOURCE

The following shows an example resource configuration with the default values
for each resource entry:

    URxvt.url-hint.launcher: /usr/bin/env xdg-open
    URxvt.url-hint.hint-chars: asdfjk
    URxvt.url-hint.exit-keysym: q

Enable the extension and configure a keysym for the B<url-hint:hint> action:

    URxvt.perl-ext-common: default,url-hint,...
    URxvt.keysym.M-f: url-hint:hint

The following shows a configuration, for wich C<M-f> launches C<xdg-open>, and
C<M-F> copies the URL into the clipboard:

    URxvt.url-hint.launcher.1: xdg-open
    URxvt.url-hint.launcher.2: /bin/sh -c 'printf "%s" "$1" |xclip' url-hint.launcher.2
    URxvt.keysym.M-f: url-hint:hint.1
    URxvt.keysym.M-F: url-hint:hint.2

The second launcher starts a new shell and executes C<printf "%s" "$1" |xclip> in it.
The string C<url-hint.launcher.2> would be accessible as C<$0> in the shell (the name of the command).
B<url-hint> appends the URL to the launcher call, which will therefore be accessible in the shell
script via C<$1>.

=head2 DEPENDENCIES

This extensions depends on the following perl modules, which can be downloaded
from CPAN, or using the package manager of your Linux distribution:

=over 4

=item L<B<Regexp::Common>|https://metacpan.org/pod/Regexp::Common>

Regular expression to match URIs.

=item L<B<Algorithm::Combinatorics>|https://metacpan.org/pod/Algorithm::Combinatorics>

Efficient generation of combinatorial sequences.

=back

=head2 SEE ALSO

L<urxvt(1)>, L<urxvtperl(3)>, L<xrdb(1)>

=head2 COPYRIGHT and LICENSE

This software is Copyright (c) 2020, Christoph GE<ouml>ttschkes.

This is free software; you can redistribute it and/or modify it under the terms
of the MIT license.
